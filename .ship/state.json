{
  "v1": {
    "config": null,
    "helmValues": "# Default values for cert-manager.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\nglobal:\n  ## Reference to one or more secrets to be used when pulling images\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  imagePullSecrets: []\n  # - name: \"image-pull-secret\"\n\n  # Optional priority class to be used for the cert-manager pods\n  priorityClassName: \"\"\n\nreplicaCount: 1\n\nstrategy: {}\n  # type: RollingUpdate\n  # rollingUpdate:\n  #   maxSurge: 0\n  #   maxUnavailable: 1\n\nimage:\n  repository: quay.io/jetstack/cert-manager-controller\n  tag: v0.6.2\n  pullPolicy: IfNotPresent\n\n# Override the namespace used to store DNS provider credentials etc. for ClusterIssuer\n# resources. By default, the same namespace as cert-manager is deployed within is\n# used. This namespace will not be automatically created by the Helm chart.\nclusterResourceNamespace: \"\"\n\nleaderElection:\n  # Override the namespace used to store the ConfigMap for leader election\n  namespace: \"\"\n\nrbac:\n  # Specifies whether RBAC resources should be created\n  create: true\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name:\n\n# Optional additional arguments\nextraArgs: []\n  # Use this flag to set a namespace that cert-manager will use to store\n  # supporting resources required for each ClusterIssuer (default is kube-system)\n  # - --cluster-resource-namespace=kube-system\n\nextraEnv: []\n# - name: SOME_VAR\n#   value: 'some value'\n\nresources: {}\n  # requests:\n  #   cpu: 10m\n  #   memory: 32Mi\n\n# Pod Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\nsecurityContext:\n  enabled: false\n  fsGroup: 1001\n  runAsUser: 1001\n\npodAnnotations: {}\n\npodLabels: {}\n# Optional DNS settings, useful if you have a public and private DNS zone for\n# the same domain on Route 53. What follows is an example of ensuring\n# cert-manager can access an ingress or DNS TXT records at all times.\n# NOTE: This requires Kubernetes 1.10 or `CustomPodDNS` feature gate enabled for\n# the cluster to work.\n# podDnsPolicy: \"None\"\n# podDnsConfig:\n#   nameservers:\n#     - \"1.1.1.1\"\n#     - \"8.8.8.8\"\n\nnodeSelector: {}\n\ningressShim: {}\n  # defaultIssuerName: \"\"\n  # defaultIssuerKind: \"\"\n  # defaultACMEChallengeType: \"\"\n  # defaultACMEDNS01ChallengeProvider: \"\"\n\nwebhook:\n  enabled: true\n\n# Use these variables to configure the HTTP_PROXY environment variables\n# http_proxy: \"http://proxy:8080\"\n# http_proxy: \"http://proxy:8080\"\n# no_proxy: 127.0.0.1,localhost\n\n# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#affinity-v1-core\n# for example:\n#   affinity:\n#     nodeAffinity:\n#      requiredDuringSchedulingIgnoredDuringExecution:\n#        nodeSelectorTerms:\n#        - matchExpressions:\n#          - key: foo.bar.com/role\n#            operator: In\n#            values:\n#            - master\naffinity: {}\n\n# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#toleration-v1-core\n# for example:\n#   tolerations:\n#   - key: foo.bar.com/role\n#     operator: Equal\n#     value: master\n#     effect: NoSchedule\ntolerations: []\n",
    "releaseName": "cert-manager",
    "helmValuesDefaults": "# Default values for cert-manager.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\nglobal:\n  ## Reference to one or more secrets to be used when pulling images\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/\n  ##\n  imagePullSecrets: []\n  # - name: \"image-pull-secret\"\n\n  # Optional priority class to be used for the cert-manager pods\n  priorityClassName: \"\"\n\nreplicaCount: 1\n\nstrategy: {}\n  # type: RollingUpdate\n  # rollingUpdate:\n  #   maxSurge: 0\n  #   maxUnavailable: 1\n\nimage:\n  repository: quay.io/jetstack/cert-manager-controller\n  tag: v0.6.2\n  pullPolicy: IfNotPresent\n\n# Override the namespace used to store DNS provider credentials etc. for ClusterIssuer\n# resources. By default, the same namespace as cert-manager is deployed within is\n# used. This namespace will not be automatically created by the Helm chart.\nclusterResourceNamespace: \"\"\n\nleaderElection:\n  # Override the namespace used to store the ConfigMap for leader election\n  namespace: \"\"\n\nrbac:\n  # Specifies whether RBAC resources should be created\n  create: true\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name:\n\n# Optional additional arguments\nextraArgs: []\n  # Use this flag to set a namespace that cert-manager will use to store\n  # supporting resources required for each ClusterIssuer (default is kube-system)\n  # - --cluster-resource-namespace=kube-system\n\nextraEnv: []\n# - name: SOME_VAR\n#   value: 'some value'\n\nresources: {}\n  # requests:\n  #   cpu: 10m\n  #   memory: 32Mi\n\n# Pod Security Context\n# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\nsecurityContext:\n  enabled: false\n  fsGroup: 1001\n  runAsUser: 1001\n\npodAnnotations: {}\n\npodLabels: {}\n# Optional DNS settings, useful if you have a public and private DNS zone for\n# the same domain on Route 53. What follows is an example of ensuring\n# cert-manager can access an ingress or DNS TXT records at all times.\n# NOTE: This requires Kubernetes 1.10 or `CustomPodDNS` feature gate enabled for\n# the cluster to work.\n# podDnsPolicy: \"None\"\n# podDnsConfig:\n#   nameservers:\n#     - \"1.1.1.1\"\n#     - \"8.8.8.8\"\n\nnodeSelector: {}\n\ningressShim: {}\n  # defaultIssuerName: \"\"\n  # defaultIssuerKind: \"\"\n  # defaultACMEChallengeType: \"\"\n  # defaultACMEDNS01ChallengeProvider: \"\"\n\nwebhook:\n  enabled: true\n\n# Use these variables to configure the HTTP_PROXY environment variables\n# http_proxy: \"http://proxy:8080\"\n# http_proxy: \"http://proxy:8080\"\n# no_proxy: 127.0.0.1,localhost\n\n# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#affinity-v1-core\n# for example:\n#   affinity:\n#     nodeAffinity:\n#      requiredDuringSchedulingIgnoredDuringExecution:\n#        nodeSelectorTerms:\n#        - matchExpressions:\n#          - key: foo.bar.com/role\n#            operator: In\n#            values:\n#            - master\naffinity: {}\n\n# expects input structure as per specification https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#toleration-v1-core\n# for example:\n#   tolerations:\n#   - key: foo.bar.com/role\n#     operator: Equal\n#     value: master\n#     effect: NoSchedule\ntolerations: []\n",
    "upstream": "github.com/helm/charts/stable/cert-manager",
    "metadata": {
      "applicationType": "helm",
      "name": "cert-manager",
      "releaseNotes": "cert-manager: fast-forward to upstream f5e1477b (#11611)\n\n* Bump for v0.6.2 (jetstack/cert-manager#1382)\n\nSigned-off-by: James Munnelly \u003cjames@munnelly.eu\u003e",
      "version": "v0.6.6"
    },
    "contentSHA": "4f400c090de97e8a3660a452cb362aa4b35bec56403d7edd65d3fc563713f374",
    "lifecycle": {
      "stepsCompleted": {
        "intro": true,
        "kustomize": true,
        "kustomize-intro": true,
        "outro": true,
        "render": true,
        "values": true
      }
    }
  }
}